import cv2
import os

# Get the absolute path of the current script
# Change: Call os.path.abspath(__file__) to get the path of the current file.
script_dir = os.path.dirname(os.path.abspath('/content/haarcascade_frontalface_default.xml')) 

# Construct the path to the XML file relative to the script's directory
xml_path = os.path.join(script_dir, 'haarcascade_frontalface_default.xml')
# Print the XML file path for debugging
print("XML file path:", xml_path)

# Load the pre-trained Haar Cascade classifier for face detection
face_cascade = cv2.CascadeClassifier(xml_path)

# Check if the classifier loaded successfully
if face_cascade.empty():
    print("Error loading face detection classifier!")
    exit()

# Read the input image
image = cv2.imread('/content/pat.jpg')

# Convert the image to grayscale as Haar Cascade works better on grayscale images
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Perform face detection
faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

# Draw rectangles around detected faces
for (x, y, w, h) in faces:
    cv2.rectangle(image, (x, y), (x + w, y + h), (255, 0, 0), 2)

# Display the output image with detected faces
cv2.imshow('Face Detection', image)
cv2.waitKey(0)
cv2.destroyAllWindows()
